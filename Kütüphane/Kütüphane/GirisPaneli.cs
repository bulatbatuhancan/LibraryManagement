using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraGrid.Views.Grid;

namespace Kütüphane
{
    public partial class GirişPaneli : Form
    {

        public int OkulNumarası { get; set; }


        public string rütbe { get; set; }


        public GirişPaneli()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously

            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource14.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource15.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource16.FillAsync();
        }


        private string findValue(string find,string tabloAdı)
        {
            string DByolu = "data source = BULAT ; database = Kütüphane ; Integrated Security = SSPI";

            SqlConnection con = new SqlConnection(DByolu);
            if (con.State == ConnectionState.Closed)
            {
                con.Open();
            }
            string value = "";
            SqlCommand command = new SqlCommand("Select *from "+tabloAdı, con);
            SqlDataReader reader = command.ExecuteReader();

            while (reader.Read())
            {
                if (txtListID.Text.Trim()==reader["ID"].ToString().Trim())
                {
                    value = reader[find].ToString().Trim();
                    break;
                }
            }
            reader.Close();
            con.Close();
            return value;

        }


        private int KitapAyarBilgisi(string find)
        {
            string DByolu = "data source = BULAT ; database = Kütüphane ; Integrated Security = SSPI";
            int value = 0;
            SqlConnection con = new SqlConnection(DByolu);
            if (con.State == ConnectionState.Closed)
            {
                con.Open();
            }
            
            SqlCommand command = new SqlCommand("Select *from Kitap_Ayarları ", con);
            SqlDataReader reader = command.ExecuteReader();

            while (reader.Read())
            {
                value = Convert.ToInt32(reader[find].ToString().Trim());
            }
            reader.Close();
            con.Close();
            return value;
        }


        private int KullanıcıkitapSayısı(string tabloAdı,string find)
        {
            string DByolu = "data source = BULAT ; database = Kütüphane ; Integrated Security = SSPI";
            SqlConnection con = new SqlConnection(DByolu);
            if (con.State == ConnectionState.Closed)
            {
                con.Open();
            }
            int sayı = 0;
            SqlCommand command = new SqlCommand("Select *from " + tabloAdı, con);
            SqlDataReader reader = command.ExecuteReader();
            while (reader.Read())
            {
                if (OkulNumarası == Convert.ToInt32(reader[find].ToString().Trim()))
                {
                    ++sayı;
                }
            }
            reader.Close();
            con.Close();
            return sayı;
        }


        private void btnAl_Click(object sender, EventArgs e)
        {
            int kitapAlmaSınırı = 0;
            int kitapSayısı = 0;
            int iadeGünSayısı = 0;
            DateTime alımTarihi = new DateTime();
            alımTarihi = DateTime.Now;
            DateTime İadeTarihi = new DateTime();

            if (rütbe=="Öğretmen")
            {
                kitapAlmaSınırı = KitapAyarBilgisi("ÖğretmenKitapAlmaSınırı");
                kitapSayısı = KullanıcıkitapSayısı("AdminUse", "OkulNum");
                iadeGünSayısı = KitapAyarBilgisi("ÖğretmenİadeSüresi");
                  İadeTarihi = alımTarihi.AddDays(iadeGünSayısı);
                
            }
            else
            {
                kitapAlmaSınırı = KitapAyarBilgisi("ÖğrenciKitapAlmaSınırı");
                kitapSayısı = KullanıcıkitapSayısı("AdminUse", "OkulNum");
                iadeGünSayısı = KitapAyarBilgisi("ÖğrenciİadeSüresi");
               
                    İadeTarihi = alımTarihi.AddDays(iadeGünSayısı);
                

            }

            if (kitapSayısı >= kitapAlmaSınırı)
            {
                MessageBox.Show("Daha fazla kitap alamazsınız");
            }

            else
            {


                string adet = findValue("Adet", "Kitap_Bilgi");
                if (adet == "0")
                {
                    MessageBox.Show("Seçilen kitap stokta bulunmamaktadır", "", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
                else
                {


                    string yazarismi = findValue("Yazarı", "Kitap_Bilgi");
                    string kitapİsmi = findValue("KitapAdı", "Kitap_Bilgi");
                    string DByolu = "data source = BULAT ; database = Kütüphane ; Integrated Security = SSPI";

                    SqlConnection con = new SqlConnection(DByolu);


                    if (con.State == ConnectionState.Closed)
                    {
                        con.Open();
                    }

                    string Reg = "insert into AdminUse(ID," + "OkulNum," +
                           "Yazarİsmi," +
                           "Kitapİsmi," + 
                           "AlınanTarih," +
                           "İadeTarihi)" +
                           "values (@ID," +
                           " @OkulNum," +
                            "@Yazarİsmi," +
                            "@Kitapİsmi," +
                            "@AlınanTarih," +
                            "@İadeTarihi)";

                    SqlCommand cmd = new SqlCommand(Reg, con);

                    cmd.Parameters.AddWithValue("@ID", txtListID.Text);
                    cmd.Parameters.AddWithValue("@OkulNum", OkulNumarası);
                    cmd.Parameters.AddWithValue("@Yazarİsmi", yazarismi);
                    cmd.Parameters.AddWithValue("@Kitapİsmi", kitapİsmi);
                    cmd.Parameters.AddWithValue("@AlınanTarih", alımTarihi);
                    cmd.Parameters.AddWithValue("@İadeTarihi", İadeTarihi);

                    

                    cmd.ExecuteNonQuery();

                    con.Close();


                    güncelleKitapAdet(Convert.ToInt32(adet) - 1, txtListID.Text.Trim());


                    sqlDataSource14.FillAsync();

                    sqlDataSource15.FillAsync();
                    dataGridView1 = bilgi_Göster(dataGridView1, "Select *from AdminUse where OkulNum='" + OkulNumarası + "'");


                }

            }
        }


        private void güncelleKitapAdet(int yeniAdet,string id)
        {
            string DByolu = "data source = BULAT ; database = Kütüphane ; Integrated Security = SSPI";

            SqlConnection con = new SqlConnection(DByolu);
            if (con.State == ConnectionState.Closed)
            {
                con.Open();
            }

            SqlCommand command = new SqlCommand("Update Kitap_Bilgi set Adet ='" + yeniAdet.ToString() + "'where ID='" + id + "'", con);
            command.ExecuteNonQuery();
            con.Close();


        }


        private void btnİade_Click(object sender, EventArgs e)
        {
            string DByolu = "data source = BULAT ; database = Kütüphane ; Integrated Security = SSPI";


            SqlConnection con = new SqlConnection(DByolu);


            if (con.State == ConnectionState.Closed)
            {
                con.Open();
            }

            string Reg = "delete AdminUse where ID='" + txtID.Text.Trim() + "'";

            SqlCommand cmd = new SqlCommand(Reg, con);


            cmd.ExecuteNonQuery();

            con.Close();


            string adet = findValue("Adet", "Kitap_Bilgi");
            güncelleKitapAdet((Convert.ToInt32(adet) + 1), txtID.Text.Trim());

            sqlDataSource15.FillAsync();
            sqlDataSource14.FillAsync();
            dataGridView1 = bilgi_Göster(dataGridView1, "Select *from AdminUse where OkulNum='" + OkulNumarası + "'");

        }


        private void GirişPaneli_Load(object sender, EventArgs e)
        {
            dataGridView1= bilgi_Göster(dataGridView1, "Select *from AdminUse where OkulNum='" + OkulNumarası + "'");
            dataGridView2 = bilgi_Göster(dataGridView2, "select * from Bildirimler where ÖğrNo='" + OkulNumarası + "'");
        }


        private DataGridView bilgi_Göster(DataGridView dt,string komut)
        {
            string DByolu = "data source = BULAT ; database = Kütüphane ; Integrated Security = SSPI";


            SqlConnection con = new SqlConnection(DByolu);


            if (con.State == ConnectionState.Closed)
            {
                con.Open();
            }

            SqlDataAdapter da = new SqlDataAdapter(komut, con);
            DataSet ds = new DataSet();
            da.Fill(ds);
            dt.DataSource = ds.Tables[0];
            con.Close();
            return dt;


        }


        private void gridView1_RowCellStyle(object sender, DevExpress.XtraGrid.Views.Grid.RowCellStyleEventArgs e)
        {
            GridView view = sender as GridView;
            int Miktar = Convert.ToInt32(view.GetRowCellValue(e.RowHandle, "Adet"));
            if (Miktar == 0)
            {
                e.Appearance.BackColor = Color.Red;
                e.Appearance.BackColor2 = Color.Yellow;
                e.Appearance.ForeColor = Color.White;
            }
            else
            {
                e.Appearance.BackColor = Color.Green;
                e.Appearance.BackColor2 = Color.GreenYellow;
                e.Appearance.ForeColor = Color.White;
            }


        }


        private void dataGridView2_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }
    }
}
